From: Simon McVittie <smcv@debian.org>
Date: Fri, 22 Jul 2022 02:10:35 +0100
Subject: Drop unnecessary volatile qualifier from g_once_init_enter()
 argument

When compiling with gcc, g_once_init_enter() is a macro implemented
in terms of gcc's C++11-style atomic operations. Since gcc 11 it is
considered to be an error to pass a volatile pointer to these built-in
functions.

The volatile qualifier appears to have been added as a result of a
past misunderstanding about whether volatile is beneficial for
thread-safety in C/C++ (it is not).

Bug-Debian: https://bugs.debian.org/997252
---
 elements/gstqtvideosink/gstqtvideosinkplugin.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/elements/gstqtvideosink/gstqtvideosinkplugin.h b/elements/gstqtvideosink/gstqtvideosinkplugin.h
index dc04671..a72c572 100644
--- a/elements/gstqtvideosink/gstqtvideosinkplugin.h
+++ b/elements/gstqtvideosink/gstqtvideosinkplugin.h
@@ -27,7 +27,7 @@ GST_DEBUG_CATEGORY_EXTERN(gst_qt_video_sink_debug);
 #define DEFINE_TYPE_FULL(cpp_type, type_name, parent_type, additional_initializations) \
     GType cpp_type::get_type() \
     { \
-        static volatile gsize gonce_data = 0; \
+        static gsize gonce_data = 0; \
         if (g_once_init_enter(&gonce_data)) { \
             GType type = 0; \
             GTypeInfo info; \
